{"version":3,"sources":["../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","metric","datatypes","datatype","query","that","datasource","queryMetrics","then","metrics","forEach","m","text","transformToSegments","panelCtrl","refresh","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;IAEaA,0B,WAAAA,0B;;;AAEX,sCAAYC,MAAZ,EAAoBC,SAApB,EAA8BC,YAA9B,EAA6C;AAAA;;AAAA,wJACrCF,MADqC,EAC7BC,SAD6B;;AAG3C,UAAKE,KAAL,GAAaH,MAAb;AACA,UAAKE,YAAL,GAAoBA,YAApB;AACA,UAAKE,MAAL,CAAYC,MAAZ,GAAqB,MAAKD,MAAL,CAAYC,MAAZ,IAAsB,eAA3C;AACA,UAAKD,MAAL,CAAYE,SAAZ,GAAwB,MAAKF,MAAL,CAAYG,QAAZ,IAAwB,EAAhD;AAN2C;AAO5C;;;;+BAEUC,K,EAAO;AACf,UAAIC,OAAO,IAAX;AACD,aAAO,KAAKC,UAAL,CAAgBC,YAAhB,CAA6B,KAAKP,MAAlC,EACJQ,IADI,CACC,UAAUC,OAAV,EAAmB;AACvBA,gBAAQC,OAAR,CAAgB,UAAUC,CAAV,EAAa;AAC3BN,eAAKL,MAAL,CAAYE,SAAZ,CAAsBS,EAAEC,IAAxB,IAAgCD,EAAER,QAAlC;AACD,SAFD;AAGA,eAAOM,OAAP;AACD,OANI,EAOLD,IAPK,CAOA,KAAKV,YAAL,CAAkBe,mBAAlB,CAAsC,KAAtC,CAPA,CAAP;AAQA;AACD;;;oCAGe;AACd,WAAKC,SAAL,CAAeC,OAAf,GADc,CACY;AAC3B;;;;EA3B6CC,c;;AA+BhDrB,2BAA2BsB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\r\nimport './css/query-editor.css!'\r\n\r\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\r\n\r\n  constructor($scope, $injector,uiSegmentSrv)  {\r\n    super($scope, $injector);\r\n\r\n    this.scope = $scope;\r\n    this.uiSegmentSrv = uiSegmentSrv;\r\n    this.target.metric = this.target.metric || 'select metric';\r\n    this.target.datatypes = this.target.datatype || {};\r\n  }\r\n\r\n  getOptions(query) {\r\n     var that = this;\r\n    return this.datasource.queryMetrics(this.target)\r\n      .then(function (metrics) {\r\n        metrics.forEach(function (m) {\r\n          that.target.datatypes[m.text] = m.datatype;\r\n        });\r\n        return metrics;\r\n      })\r\n     .then(this.uiSegmentSrv.transformToSegments(false));\r\n    // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\r\n  }\r\n\r\n\r\n  metricChanged() {\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n}\r\n\r\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\r\n\r\n"]}